<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.enerbos.cloud.dss.service.repository.dao.UploadLogDao" >
  <resultMap id="BaseResultMap" type="com.enerbos.cloud.dss.service.domain.UploadLog" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="ip_host" property="ipHost" jdbcType="VARCHAR" />
    <result column="filename" property="filename" jdbcType="VARCHAR" />
    <result column="size" property="size" jdbcType="VARCHAR" />
    <result column="mimeType" property="mimetype" jdbcType="VARCHAR" />
    <result column="height" property="height" jdbcType="INTEGER" />
    <result column="width" property="width" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, ip_host, filename, size, mimeType, height, width, create_time
  </sql>
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dss_upload_log
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="findPage" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from dss_upload_log
    where id = #{id,jdbcType=VARCHAR}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from dss_upload_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.enerbos.cloud.dss.service.domain.UploadLog" >
    <selectKey keyProperty="id" resultType="java.lang.String"
               order="BEFORE">
      select replace(uuid(),'-','') from dual
    </selectKey>
    insert into dss_upload_log (id, user_id,ip_host,
      filename, size, mimeType, 
      height, width, create_time
      )
    values (#{id}, #{userId,jdbcType=VARCHAR},  #{ipHost,jdbcType=VARCHAR},
      #{filename,jdbcType=VARCHAR}, #{size,jdbcType=VARCHAR}, #{mimetype,jdbcType=VARCHAR}, 
      #{height,jdbcType=INTEGER}, #{width,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
</mapper>